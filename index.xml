<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JSD on GA Javascript</title>
    <link>/</link>
    <description>Recent content in JSD on GA Javascript</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 22 Jan 2017 18:05:18 -0500</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Documentation</title>
      <link>/class-resources/documentation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/class-resources/documentation/</guid>
      <description>Referencing documentation is a core task for developers.
 Documentation communicates how something (in our case programming languages, software libraries) works.
 Good documentation reduces implementation time and increases predictability of our software programs.
  We will be referring to the following list of the documentation resources frequently throughout the course:
HTML MDN&amp;rsquo;s HTML Reference
CSS MDN&amp;rsquo;s CSS Reference
Javascript MDN&amp;rsquo;s Javascript Reference
jQuery jQuery Documentation</description>
    </item>
    
    <item>
      <title>Git Commands</title>
      <link>/class-resources/git-commands/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/class-resources/git-commands/</guid>
      <description>The following is a summary of the most commonly used git commands
Create Repositories Start a new repository or obtain one from an existing URL
   Command Description     git init Creates a new local repository in the current directory   git init [project-name] Creates a new local repository with the specified name   git clone [url] Downloads a project and its entire version history    Making Changes    Command Description     git status Lists all new or modified files to be committed   git add [file] Snapshots the file in preparation for versioning   git commit -m &amp;quot;[descriptive message]&amp;quot; Records file snapshots permanently in version history   git diff Shows file differences not yet staged   git diff --staged Shows file differences between staging and the last file version   git reset [file] Unstages the file, but preserve its contents    Working with Branches    Command Description     git branch Lists all local branches in the current repository   git branch [branch-name] Creates a new branch   git checkout [branch-name] Switches to the specified branch and updates the working directory   git merge [branch] Combines the specified branchâ€™s history into the current branch   git branch -d [branch-name] Deletes the specified branch    Review History    Command Description     git log Lists version history for the current branch   git log --follow [file] Lists version history for a file, including renames   git show [commit] Outputs metadata and content changes of the specified commit   git diff [first-branch].</description>
    </item>
    
    <item>
      <title>Intro the the Command Line</title>
      <link>/01-command-line-js-and-git/intro-to-the-command-line/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/01-command-line-js-and-git/intro-to-the-command-line/</guid>
      <description>Introduction to the Command Line  The command line is the heart of your operating system
 Almost anything you can do from a GUI (Graphical User Interface), you can also do from the command line, but FASTER!
 We&amp;rsquo;ll learn how to navigate computer files and folders using the terminal; this will help us when we start working with git and GitHub
  Command Line Basics Here are some important UNIX commands to know as you&amp;rsquo;re working on the terminal.</description>
    </item>
    
    <item>
      <title>Code Along: Command Line Intro</title>
      <link>/01-command-line-js-and-git/code-along-command-line-intro/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/01-command-line-js-and-git/code-along-command-line-intro/</guid>
      <description>Code Along: Command Line Intro For Macs: * Open the &amp;ldquo;Terminal&amp;rdquo; app (Applications &amp;gt; Utilities &amp;gt; Terminal) * Optionally, download and install iTerm 2, which is a replacement for the terminal app that is more configurable.
For Windows: * Open the &amp;ldquo;Command Prompt&amp;rdquo; application. * For a better experience, try Console.
Get familiar with the basic commands on the terminal!
When copying the following code snippets, DO NOT include the $ this is a universal symbol to indicate that the anything following the &amp;lsquo;$&amp;rsquo; should be entered into the command line</description>
    </item>
    
    <item>
      <title>Keyboard Shortcuts</title>
      <link>/class-resources/keyboard-shortcuts/</link>
      <pubDate>Sun, 22 Jan 2017 18:05:18 -0500</pubDate>
      
      <guid>/class-resources/keyboard-shortcuts/</guid>
      <description>General Window Management &amp;amp; Browser Shortcuts    Action Mac Windows     Open Chrome Developer Tools cmd+option + i F2 or ctrl + shift + i   Refresh page cmd + R ctrl + R   Switch between applications cmd + tab alt + tab   Switch between windows in the same application cmd + ~     Atom Shortcuts Files, Windows, Tabs Management    Command macOS Windows Linux Description     Open Settings Menu cmd+, ctrl+, ctrl+, Opens the Atom&amp;rsquo;s settings menu   Open File (Fuzzy) cmd+p or cmd+t ctrl+p or ctrl+t ctrl+p or ctrl+t Opens the Fuzzy Finder   Browse Open Files cmd+b ctrl+b ctrl+b Browse tabs within the window   Previous Tab alt+cmd+left ctrl+pageup ctrl+pageup Cycles left through open tabs (in the active pane)   Next Tab alt+cmd+right ctrl+pagedown ctrl+pagedown Cycles right through open tabs (in the active page)   Toggle Tree View cmd+\ ctrl+\ ctrl+\ Toggles Atom&amp;rsquo;s file Tree View   Show Available Snippets alt+shift+s alt+shift+s alt+shift+s Shows the snippets available to Atom   Save cmd+s ctrl+s ctrl+s Saves the currently active file   Save As shift+cmd+s ctrl+shift+s ctrl+shift+s Saves the currently active file under a different name   Save All alt+cmd+s   Saves all changed files   Close Tab cmd+w ctrl+w ctrl+w Closes the currently active tab   Close Window shift+cmd+w ctrl+shift+w ctrl+shift+w Closes the currently active editor window   Split Window cmd+k up/down/left/right ctrl+k up/down/left/right ctrl+k up/down/left/right Split the currently active tab in one of the four directions   Focus Pane cmd+k cmd+up/down/left/right ctrl+k ctrl+up/down/left/right ctrl+k ctrl+up/down/left/right Move the focus to the pane in one of the four directions   Toggle full screen ctrl+cmd+f F11 F11 Toggle full screen window    Editing    Command macOS Windows Linux Description     Duplicate Lines shift+cmd+d ctrl+shift+d ctrl+shift+d Duplicates the line of the current cursor position and creates a new line under it with the same contents   Delete Line ctrl+shift+k ctrl+shift+k ctrl+shift+k Deletes the current line   Move Line Up ctrl+cmd+up ctrl+up ctrl+up Moves the contents of the current cursor position up one line.</description>
    </item>
    
    <item>
      <title>Mac OS X Installation Instructions</title>
      <link>/class-resources/node-git-installation/mac-os-x/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/class-resources/node-git-installation/mac-os-x/</guid>
      <description>Mac OS X Installation Instructions 1) Open your terminal application
 Open your terminal (Applications &amp;gt; Utilities &amp;gt; Terminal)
 All of the following commands (below) that start with $ should be copied and pasted in your terminal / command prompt (also referred to as the &amp;ldquo;command line&amp;rdquo;)
 DO NOT include the &amp;lsquo;$&amp;rsquo; when copying and pasting the commands below; &amp;lsquo;$&amp;rsquo; is a universal symbol for the terminal / command line</description>
    </item>
    
    <item>
      <title>Objectives</title>
      <link>/00-course-intro-and-tools/objectives/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/00-course-intro-and-tools/objectives/</guid>
      <description> Cover class logistics, structure &amp;amp; keys to success
 Introduce tools you will be using throughout the class
 Discuss the benchmarks for assessments in terms of class participation, homework, and unit projects
 Confirm installation and configuration of Node, Git, and other command line tools
 Practice programmatic thinking by writing pseudocode
  </description>
    </item>
    
    <item>
      <title>Objectives</title>
      <link>/01-command-line-js-and-git/objectives/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/01-command-line-js-and-git/objectives/</guid>
      <description> Use the most common commands to navigate and modify files / directories via the command line
 Learn the basics of working with a Git project
 Gain familiarity with the most common git commands
 Learn how GitHub is used for developer collaboration
 Run basic JavaScript script on the command line using Node
  </description>
    </item>
    
    <item>
      <title>Recommended Atom Editor Settings</title>
      <link>/class-resources/atom-editor-settings/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/class-resources/atom-editor-settings/</guid>
      <description>All of the settings below can be accessed using the following steps:
 Mac: cmd + , -&amp;gt; Editor PC: ctrl + , -&amp;gt; Editor  Setting indentation levels / default tab-size During our course we will be using a set indentation level of 2 spaces (1 indentation level = 2 spaces). Atom makes it easy conform to this approach by setting our tab to a set level of indentation.</description>
    </item>
    
    <item>
      <title>Git Overview</title>
      <link>/01-command-line-js-and-git/git-overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/01-command-line-js-and-git/git-overview/</guid>
      <description>Version Control System (VCS)  Tracks the history of changes as people and teams collaborate on projects together (think &amp;ldquo;track changes feature available for MS Word or Google Docs&amp;rdquo;)
 Developers can review project history to find out:
 Which changes were made?
 Who made the changes?
 When were the changes made?
 Why were changes needed?
   What is Git?  Git is VCS that is distributed - meaning developers don&amp;rsquo;t need a constant connection to be able to collaborate with other developers (unlike other VCSs)</description>
    </item>
    
    <item>
      <title>Windows Installation Instructions</title>
      <link>/class-resources/node-git-installation/windows/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/class-resources/node-git-installation/windows/</guid>
      <description>Windows Installation Instructions 1) Open the Command Prompt application
 All of the following commands (below) that start with $ should be copied and pasted in your terminal / command prompt (also referred to as the &amp;ldquo;command line&amp;rdquo;)
 DO NOT include the &amp;lsquo;$&amp;rsquo; when copying and pasting the commands below; &amp;lsquo;$&amp;rsquo; is a universal symbol for the terminal / command line
 Press the enter / return key on your keyboard after pasting the command</description>
    </item>
    
    <item>
      <title>Working with Atom Themes</title>
      <link>/class-resources/atom-themes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/class-resources/atom-themes/</guid>
      <description>Changing Themes Atom allows you to easily switch between your installed themes by doing the following:
 Opening Atom Settings (mac: cmd + , | pc: ctrl + ,) Select Themes in the left-hand menu Select the dropdown menu labeled Syntax Themes Choose one of the installed themes listed in the dropdown menu  Atom comes pre-installed with a set of themes. See that section below to add new themes to Atom</description>
    </item>
    
    <item>
      <title>Github</title>
      <link>/01-command-line-js-and-git/github/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/01-command-line-js-and-git/github/</guid>
      <description>What is Github?  Web-based Git repository hosting service
 Built on top of git
 Serves as the remote repository for a developer&amp;rsquo;s git projects
 Home to +90% of all open source projects
 Has become a &amp;ldquo;social network&amp;rdquo; for developers share, discuss and collaborate on software projects
 Many companies also use GitHub internally to privately collaborate on software projects with the other software engineers within their organization</description>
    </item>
    
    <item>
      <title>Git Vocabulary</title>
      <link>/01-command-line-js-and-git/git-vocabulary/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/01-command-line-js-and-git/git-vocabulary/</guid>
      <description>Git Vocabulary Repository  Most basic element of GitHub
 A repository can be referred to as a project
 contains all of a project&amp;rsquo;s files
 Stores each file&amp;rsquo;s revision history
 Repositories can have multiple collaborators and can be either public or private.
  Commit  A &amp;ldquo;revision&amp;rdquo;, is an individual change to a file (or set of files)
 Git&amp;rsquo;s version of saving
 Commits save a &amp;ldquo;snapshot&amp;rdquo; of all of the project&amp;rsquo;s files at that point in time</description>
    </item>
    
    <item>
      <title>Git Basics</title>
      <link>/01-command-line-js-and-git/git-basics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/01-command-line-js-and-git/git-basics/</guid>
      <description>Git Basics  Before we can understand how git saves files, we need to cover some concepts about how git works  Snapshots Three States of a Git file  Git has three main states that your files can reside in: committed, modified, and staged
 committed: files that have been saved / recorded to the repository&amp;rsquo;s history
 staged: files that have been modified
 modified: files that has been modified but have not yet been staged and committed to project&amp;rsquo;s history</description>
    </item>
    
    <item>
      <title>Class Logistics &amp; Materials</title>
      <link>/00-course-intro-and-tools/class-logistics-materials/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/00-course-intro-and-tools/class-logistics-materials/</guid>
      <description>Class Logistics  Class Schedule: Tuesdays &amp;amp; Thursdays, 6:30pm - 9:30pm, from Jul 30th through Oct 3rd
 Break: 15 minute break during the middle of class from 7:45pm to 8:00pm (subject to change depending on flow of the class, but you&amp;rsquo;ll always get a 15 min break)
 Class Materials: Most lessons will include a set of files that you&amp;rsquo;ll work with during that lesson, we&amp;rsquo;ll refer to these files as the &amp;ldquo;lesson files&amp;rdquo;</description>
    </item>
    
    <item>
      <title>Code Along: Basic Git Workflow</title>
      <link>/01-command-line-js-and-git/code-along-basic-git-workflow/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/01-command-line-js-and-git/code-along-basic-git-workflow/</guid>
      <description>Code Along: Basic Git Workflow  There&amp;rsquo;s a learning curve when working with Git
 The best way to learn how Git works is to see it in action
 Along the way, we&amp;rsquo;re going introduce important concepts and Git Commands
 This tutorial is meant to be interactive, so please follow along
 The tutorial will involve heavy use of the command line
  Step 0: Navigate to your class folder on your command line  From your command line, navigate to your class folder (i.</description>
    </item>
    
    <item>
      <title>Linux Installation Instructions</title>
      <link>/class-resources/node-git-installation/linux/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/class-resources/node-git-installation/linux/</guid>
      <description>Linux Installation Instructions 1) Find and Open your Terminal / Command Prompt application
 All of the following commands (below) that start with $ should be copied and pasted in your terminal / command prompt (also referred to as the &amp;ldquo;command line&amp;rdquo;)
 DO NOT include the &amp;lsquo;$&amp;rsquo; when copying and pasting the commands below; &amp;lsquo;$&amp;rsquo; is a universal symbol for the terminal / command line
 Press the enter / return key on your keyboard after pasting the command</description>
    </item>
    
    <item>
      <title>Course Structure</title>
      <link>/00-course-intro-and-tools/course-structure/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/00-course-intro-and-tools/course-structure/</guid>
      <description>Overview  The course has 20 classes
 What you&amp;rsquo;ll learn:
 Fundamentals of JavaScript: including programming concepts such as data types, variables, and loopsâ€”the core concepts of programming
 Object Oriented JavaScript (OOP) and APIs: Learn how JavaScript can be used to exchange information and functionality within our programs
 Practical applications of JavaScript: Learn how to JavaScript can be used to manipulate websites and applications
  3 Projects</description>
    </item>
    
    <item>
      <title>Course Tools</title>
      <link>/00-course-intro-and-tools/tools/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/00-course-intro-and-tools/tools/</guid>
      <description>Text Editor:
 Why?: Text editor is a program that developers use to create and edit a range of programming language files. We&amp;rsquo;ll be using Atom, because it&amp;rsquo;s open source (free) and really good.
 Download Atom
  Browser:
 Why?: Google chrome is a robust browser with a variety of tools that are helpful to developers.
 Install Google Chrome
  Github:
 Why?: Github (and Git) are tools/applications used to by developers to manage their code and work collaboratively with each other.</description>
    </item>
    
    <item>
      <title>Folder Organization</title>
      <link>/00-course-intro-and-tools/folder-structure/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/00-course-intro-and-tools/folder-structure/</guid>
      <description>Recommended Folder Organization  Create a folder in your Documents folder (My Documents on Windows) called jsd
 At beginning of every class, you&amp;rsquo;ll use git (this process will be explained in the next class) to download any starter files to your jsd folder are available for that day&amp;rsquo;s lesson
 As the course progresses you&amp;rsquo;ll have a neatly organized listing of all of your work that looks similar to this:</description>
    </item>
    
    <item>
      <title>Confirm Node &amp; Git Installation</title>
      <link>/00-course-intro-and-tools/confirm-node-git-installation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/00-course-intro-and-tools/confirm-node-git-installation/</guid>
      <description>Confirm Node &amp;amp; Git Installation 1) Ensure that you followed the installation instructions for your Operation System found here: Node and Git Installation
2) Open up your console / terminal
 For Mac OS X users:
 Open the &amp;ldquo;Terminal&amp;rdquo; app (Applications &amp;gt; Utilities &amp;gt; Terminal)  For Windows:
 Open the &amp;ldquo;Command Prompt&amp;rdquo; application.   3) In the terminal type the following command to confirm git was successfully installed:</description>
    </item>
    
    <item>
      <title>What is Programming?</title>
      <link>/00-course-intro-and-tools/what-is-programming/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/00-course-intro-and-tools/what-is-programming/</guid>
      <description> What is Programming?  List of instructions that a computer needs in order to complete a task
 Instructions are provided in a programming language that the computer understands
 These set of instructions are commonly referred as source code or a program
 There are many programming languages available, during this course we will be learning JavaScript
  </description>
    </item>
    
    <item>
      <title>Keys to Success</title>
      <link>/class-resources/keys-to-success/</link>
      <pubDate>Sat, 16 Mar 2019 17:11:17 -0400</pubDate>
      
      <guid>/class-resources/keys-to-success/</guid>
      <description>Do your homework: More you practice the concepts learned in class, the faster you&amp;rsquo;ll pick them up
 Don&amp;rsquo;t try to memorize anything: You&amp;rsquo;ll memorize things naturally through the act of doing things over and over again. Besides, if you don&amp;rsquo;t remember something just look it up (i.e. google).
 Work smarter not harder: In additional to looking things up, developers are really good at referencing past code that they&amp;rsquo;ve used in the past to solve problems they encounter in the present.</description>
    </item>
    
    <item>
      <title>What is Javascript?</title>
      <link>/00-course-intro-and-tools/what-is-javascript/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/00-course-intro-and-tools/what-is-javascript/</guid>
      <description>What is JavaScript?  programming language created in 1995 by Netscape (now Mozilla)
 It was created in 10 days
 Not the same as Java
  What does JavaScript do?  Adds interactivity to your websites
 Makes web based software feel more like desktop software
 Can be used to save data to a database or to create desktop applications
 Improves overall user experience of web-based applications</description>
    </item>
    
    <item>
      <title>Learning HTML &amp; CSS</title>
      <link>/class-resources/learning-html-css/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/class-resources/learning-html-css/</guid>
      <description>Here are some great (FREE) resources for learning HTML &amp;amp; CSS
HTML &amp;amp; CSS  Codecademy - HTML &amp;amp; CSS course
 Shay Howe - Learn to Code HTML &amp;amp; CSS
 FreeCodeCamp Responsive Web Design Certification (300 hours)
 Udacity - Intro to HTML and CSS
 Khan Academy - Intro to HTML/CSS
  Flexbox  MDN - Flexbox
 Flexbox - Flexbox Froggy
 Flexbox - Flexbox Zombies</description>
    </item>
    
    <item>
      <title>Pseudocode</title>
      <link>/00-course-intro-and-tools/pseudocode/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/00-course-intro-and-tools/pseudocode/</guid>
      <description> Pseudocode  Process of writing a program without using the syntax of a programming language
 Mixture of natural language and high-level programming concepts
 There is no standard way to write pseudocode, use langauge that can be understood by technical and non-technical people
 Use pseudocode as an &amp;ldquo;outline&amp;rdquo; for your real code
  </description>
    </item>
    
    <item>
      <title>Class Exercise - Smart Thermostat Pseudocode</title>
      <link>/00-course-intro-and-tools/class-exercise-smart-thermostat-pseudocode/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/00-course-intro-and-tools/class-exercise-smart-thermostat-pseudocode/</guid>
      <description> Class Exercise: Thermostat logic in pseudocode We&amp;rsquo;re going to use pseudocode to describe the basic functionality of a smart thermostat
 As as class we are going to write some pseudocode for a program for a smart thermostat
 Weâ€™ll focus on coming up with the logic that will help the thermostat know when to turn the heat on and off
  </description>
    </item>
    
    <item>
      <title>Group Exercise - Rock, Paper, Scissors</title>
      <link>/00-course-intro-and-tools/group-exercise-rock-paper-scissors/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/00-course-intro-and-tools/group-exercise-rock-paper-scissors/</guid>
      <description>Group Exercise: Rock, Paper and Scissors Form groups (of 2 or 3) and write pseudocode describing a game of Rock, Paper, Scissors</description>
    </item>
    
  </channel>
</rss>